plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
    id "io.freefair.lombok" version "4.1.6"
}

group 'g09.jhused'
version '0.0.1'

repositories {
    mavenCentral()
    // comment this line and line 42, the jar works
    maven { url "https://repository.mulesoft.org/nexus/content/repositories/public/" }
}

dependencies {

    //JDBI
    implementation 'org.jdbi:jdbi3-bom:3.16.0'
    implementation 'org.jdbi:jdbi3-core:3.16.0'
    implementation 'org.jdbi:jdbi3-postgres:3.16.0'

    //SQL
    implementation 'org.postgresql:postgresql:42.2.10'
    implementation 'org.sql2o:sql2o:1.6.0'
    implementation 'org.sql2o.extensions:sql2o-postgres:1.6.0'

    //gson
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.code.gson:gson:2.8.6'

    //slf4j
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'


    //SSO
    implementation 'org.pac4j:pac4j-core:4.0.0'
    implementation 'org.pac4j:pac4j-http:4.0.0'
    implementation 'org.pac4j:spark-pac4j:4.0.0'
    // comment this line and line 12, the jar works
    implementation 'org.pac4j:pac4j-saml:4.0.0'

    //JavaSpark
    implementation 'com.sparkjava:spark-core:2.9.3'
    implementation 'com.sparkjava:spark-template-mustache:2.7.1'

    //Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    //Unirest, JavaSpark, HikariCP
    implementation 'com.konghq:unirest-java:3.11.09'
    implementation 'com.zaxxer:HikariCP:4.0.3'
}


test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes('Main-Class': 'api.ApiServer')
    }
//    from {
//        configurations.externalLibs.collect { it.isDirectory() ? it : zipTree(it) }
////        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
}

shadowJar {
    mergeServiceFiles()
}

//tasks.build.dependsOn tasks.shadowJar
//task stage(dependsOn: ['build', 'clean'])
task stage(dependsOn: ['tasks.shadowJar', 'clean'])
//build.mustRunAfter clean
tasks.shadowJar.mustRunAfter clean